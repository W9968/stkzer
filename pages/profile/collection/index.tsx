import Head from 'next/head'
import type { NextPage } from 'next'

import moment from 'moment'
import Input from 'modules/input/Input'
import Button from 'modules/button/Button'

import { ChangeEvent, useMemo, useState } from 'react'
import { StyledDash } from 'theme/dash.element'

import { __data } from 'context/DataProvider'
import { __auth } from 'context/AuthProvider'
import DataTable from 'modules/table/DataTable'

const Index: NextPage = () => {
  const { isLoggedIn, currentUser } = __auth()
  const { addLists, message, lists } = __data()
  const [value, setValue] = useState<string>('')

  const columns = useMemo(
    () => [
      { Header: 'collection', accessor: 'list_type' },
      { Header: 'created', accessor: 'created_at' },
    ],
    []
  )

  return (
    <>
      <Head>
        <title>stkzer | List </title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <StyledDash>
        <div
          style={{
            gap: '1rem',
            display: 'grid',
            alignItems: 'flex-end',
            justifyContent: 'center',
            gridTemplateColumns: '1fr 100px',
          }}>
          <Input
            type={'text'}
            value={value}
            label={'adding a new list'}
            onChange={(e: ChangeEvent<HTMLInputElement>) =>
              setValue(e.target.value)
            }
          />
          <Button
            title={'create'}
            background={'#3b82f6'}
            color={'a'}
            onClick={() => {
              if (isLoggedIn) {
                addLists({
                  list_type: value.toLowerCase(),
                  user_id: `${currentUser.user_id}`,
                  created_at: new Date(Date.now()),
                })
                if (message.type === 'success') {
                  setValue('')
                }
              }
            }}
          />
        </div>

        {lists.length !== 0 && (
          <DataTable
            columns={columns}
            data={lists.map((obj) => {
              return {
                ...obj,
                created_at: moment(obj.created_at).format('ll'),
              }
            })}
          />
        )}
      </StyledDash>
    </>
  )
}

export default Index
